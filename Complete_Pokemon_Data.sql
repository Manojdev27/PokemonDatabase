-- shows list of schemas/databases in the localhost
show databases;

-- used to select the particular database
use pokemondatabase

-- Creating multiple tables using primary key and foreign key
CREATE TABLE Pokemons(
PokeDexNumber INT AUTO_INCREMENT PRIMARY KEY,
Name VARCHAR(100),
TypeId1 INT NOT NULL,
TypeId2 INT NOT NULL,
FOREIGN KEY(TypeId1) REFERENCES Type1(TypeId),
FOREIGN KEY(TypeId2) REFERENCES Type2(TypeId)
);

CREATE TABLE Type1(
TypeId int NOT NULL AUTO_INCREMENT PRIMARY KEY,
Type1 VARCHAR(50)
)

CREATE TABLE Type2(
TypeId int NOT NULL AUTO_INCREMENT PRIMARY KEY,
Type2 VARCHAR(50) NULL
)

-- Alter table Type2
ALTER TABLE Type2(
ALTER COLUMN Type2 VARCHAR(50) NULL
)

CREATE TABLE BASESTATS(
PokeDexNumber int AUTO_INCREMENT PRIMARY KEY,
HP int NOT NULL,
Attack int NOT NULL,
Defense int NOT NULL,
SpecialAttack int NOT NULL,
SpecialDefense int NOT NULL,
Speed int NOT NULL,
FOREIGN KEY(PokeDexNumber) REFERENCES Pokemons(PokeDexNumber)
);

-- show list of tables in the selected database
show tables

-- Drop Tables
DROP table Type1;
DROP table Type2;
DROP table Pokemons;
DROP table BASESTATS;
DROP table pokemonphotos

-- insert single value
insert into Type1 values(1,'Bug')

insert into Type2 values(1,'Bug')

-- returns all records from the table type1
Select * from Type1

Select * from Type2

-- delete all the contents from the table type1
delete from Type1

-- insert multiple values
insert into Type1 (Type1) values ('Bug'),('Dark'),('Dragon'),('Electric'),('Fairy'),('Fighting'),('Fire'),('Flying'),('Ghost'),('Grass'),('Ground'),('Ice'),('Normal'),('Poison'),('Psychic'),('Rock'),('Steel'),('Water')

insert into Type2 (Type2) values ('Bug'),('Dark'),('Dragon'),('Electric'),('Fairy'),('Fighting'),('Fire'),('Flying'),('Ghost'),('Grass'),('Ground'),('Ice'),('Normal'),('NULL'),('Poison'),('Psychic'),('Rock'),('Steel'),('Water');

insert into pokemons (Name,TypeId1,TypeId2) values ('Bulbasaur',10,15),('Ivysaur',10,15),('Venusaur',10,15),('Charmander',7,14),('Charmeleon',7,14),('Charizard',7,8),('Squirtle',18,14),('Wartortle',18,14),('Blastoise',18,14),('Caterpie',1,14),('Metapod',1,14),('Butterfree',1,8),('Weedle',1,15),('Kakuna',1,15),('Beedrill',1,15),('Pidgey',13,8),('Pidgeotto',13,8),('Pidgeot',13,8),('Rattata',13,14),('Raticate',13,14),('Spearow',13,8),('Fearow',13,8),('Ekans',14,14),('Arbok',14,14),('Pikachu',4,14),('Raichu',4,14),('Sandshrew',11,14),('Sandslash',11,14),('Nidoran♀',14,14),('Nidorina',14,14),('Nidoqueen',14,11),('Nidoran♂',14,14),('Nidorino',14,14),('Nidoking',14,11),('Clefairy',5,14),('Clefable',5,14),('Vulpix',7,14),('Ninetales',7,14),('Jigglypuff',13,5),('Wigglytuff',13,5),('Zubat',14,8),('Golbat',14,8),('Oddish',10,15),('Gloom',10,15),('Vileplume',10,15),('Paras',1,10),('Parasect',1,10),('Venonat',1,15),('Venomoth',1,15),('Diglett',11,14),('Dugtrio',11,14),('Meowth',13,14),('Persian',13,14),('Psyduck',18,14),('Golduck',18,14),('Mankey',6,14),('Primeape',6,14),('Growlithe',7,14),('Arcanine',7,14),('Poliwag',18,14),('Poliwhirl',18,14),('Poliwrath',18,6),('Abra',15,14),('Kadabra',15,14),('Alakazam',15,14),('Machop',6,14),('Machoke',6,14),('Machamp',6,14),('Bellsprout',10,15),('Weepinbell',10,15),('Victreebel',10,15),('Tentacool',18,15),('Tentacruel',18,15),('Geodude',16,11),('Graveler',16,11),('Golem',16,11),('Ponyta',7,14),('Rapidash',7,14),('Slowpoke',18,16),('Slowbro',18,16),('Magnemite',4,18),('Magneton',4,18),('Farfetch''d',13,8),('Doduo',13,8),('Dodrio',13,8),('Seel',18,14),('Dewgong',18,12),('Grimer',14,14),('Muk',14,14),('Shellder',18,14),('Cloyster',18,12),('Gastly',9,15),('Haunter',9,15),('Gengar',9,15),('Onix',16,11),('Drowzee',15,14),('Hypno',15,14),('Krabby',18,14),('Kingler',18,14),('Voltorb',4,14),('Electrode',4,14),('Exeggcute',10,16),('Exeggutor',10,16),('Cubone',11,14),('Marowak',11,14),('Hitmonlee',6,14),('Hitmonchan',6,14),('Lickitung',13,14),('Koffing',14,14),('Weezing',14,14),('Rhyhorn',11,17),('Rhydon',11,17),('Chansey',13,14),('Tangela',10,14),('Kangaskhan',13,14),('Horsea',18,14),('Seadra',18,14),('Goldeen',18,14),('Seaking',18,14),('Staryu',18,14),('Starmie',18,16),('Mr. Mime',15,5),('Scyther',1,8),('Jynx',12,16),('Electabuzz',4,14),('Magmar',7,14),('Pinsir',1,14),('Tauros',13,14),('Magikarp',18,14),('Gyarados',18,8),('Lapras',18,12),('Ditto',13,14),('Eevee',13,14),('Vaporeon',18,14),('Jolteon',4,14),('Flareon',7,14),('Porygon',13,14),('Omanyte',16,19),('Omastar',16,19),('Kabuto',16,19),('Kabutops',16,19),('Aerodactyl',16,8),('Snorlax',13,14),('Articuno',12,8),('Zapdos',4,8),('Moltres',7,8),('Dratini',3,14),('Dragonair',3,14),('Dragonite',3,8),('Mewtwo',15,14),('Mew',15,14),('Chikorita',10,14),('Bayleef',10,14),('Meganium',10,14),('Cyndaquil',7,14),('Quilava',7,14),('Typhlosion',7,14),('Totodile',18,14),('Croconaw',18,14),('Feraligatr',18,14),('Sentret',13,14),('Furret',13,14),('Hoothoot',13,8),('Noctowl',13,8),('Ledyba',1,8),('Ledian',1,8),('Spinarak',1,15),('Ariados',1,15),('Crobat',14,8),('Chinchou',18,4),('Lanturn',18,4),('Pichu',4,14),('Cleffa',5,14),('Igglybuff',13,5),('Togepi',5,14),('Togetic',5,8),('Natu',15,8),('Xatu',15,8),('Mareep',4,14),('Flaaffy',4,14),('Ampharos',4,14),('Bellossom',10,14),('Marill',18,5),('Azumarill',18,5),('Sudowoodo',16,14),('Politoed',18,14),('Hoppip',10,8),('Skiploom',10,8),('Jumpluff',10,8),('Aipom',13,14),('Sunkern',10,14),('Sunflora',10,14),('Yanma',1,8),('Wooper',18,11),('Quagsire',18,11),('Espeon',15,14),('Umbreon',2,14),('Murkrow',2,8),('Slowking',18,16),('Misdreavus',9,14),('Unown',15,14),('Wobbuffet',15,14),('Girafarig',13,16),('Pineco',1,14),('Forretress',1,18),('Dunsparce',13,14),('Gligar',11,8),('Steelix',17,11),('Snubbull',5,14),('Granbull',5,14),('Qwilfish',18,15),('Scizor',1,18),('Shuckle',1,17),('Heracross',1,6),('Sneasel',2,12),('Teddiursa',13,14),('Ursaring',13,14),('Slugma',7,14),('Magcargo',7,17),('Swinub',12,11),('Piloswine',12,11),('Corsola',18,17),('Remoraid',18,14),('Octillery',18,14),('Delibird',12,8),('Mantine',18,8),('Skarmory',17,8),('Houndour',2,7),('Houndoom',2,7),('Kingdra',18,3),('Phanpy',11,14),('Donphan',11,14),('Porygon2',13,14),('Stantler',13,14),('Smeargle',13,14),('Tyrogue',6,14),('Hitmontop',6,14),('Smoochum',12,16),('Elekid',4,14),('Magby',7,14),('Miltank',13,14),('Blissey',13,14),('Raikou',4,14),('Entei',7,14),('Suicune',18,14),('Larvitar',16,11),('Pupitar',16,11),('Tyranitar',16,2),('Lugia',15,8),('Ho-oh',7,8),('Celebi',15,10),('Treecko',10,14),('Grovyle',10,14),('Sceptile',10,14),('Torchic',7,14),('Combusken',7,6),('Blaziken',7,6),('Mudkip',18,14),('Marshtomp',18,11),('Swampert',18,11),('Poochyena',2,14),('Mightyena',2,14),('Zigzagoon',13,14),('Linoone',13,14),('Wurmple',1,14),('Silcoon',1,14),('Beautifly',1,8),('Cascoon',1,14),('Dustox',1,15),('Lotad',18,10),('Lombre',18,10),('Ludicolo',18,10),('Seedot',10,14),('Nuzleaf',10,2),('Shiftry',10,2),('Taillow',13,8),('Swellow',13,8),('Wingull',18,8),('Pelipper',18,8),('Ralts',15,5),('Kirlia',15,5),('Gardevoir',15,5),('Surskit',1,19),('Masquerain',1,8),('Shroomish',10,14),('Breloom',10,6),('Slakoth',13,14),('Vigoroth',13,14),('Slaking',13,14),('Nincada',1,11),('Ninjask',1,8),('Shedinja',1,9),('Whismur',13,14),('Loudred',13,14),('Exploud',13,14),('Makuhita',6,14),('Hariyama',6,14),('Azurill',13,5),('Nosepass',16,14),('Skitty',13,14),('Delcatty',13,14),('Sableye',2,9),('Mawile',17,5),('Aron',17,17),('Lairon',17,17),('Aggron',17,17),('Meditite',6,16),('Medicham',6,16),('Electrike',4,14),('Manectric',4,14),('Plusle',4,14),('Minun',4,14),('Volbeat',1,14),('Illumise',1,14),('Roselia',10,15),('Gulpin',14,14),('Swalot',14,14),('Carvanha',18,2),('Sharpedo',18,2),('Wailmer',18,14),('Wailord',18,14),('Numel',7,11),('Camerupt',7,11),('Torkoal',7,14),('Spoink',15,14),('Grumpig',15,14),('Spinda',13,14),('Trapinch',11,14),('Vibrava',11,3),('Flygon',11,3),('Cacnea',10,14),('Cacturne',10,2),('Swablu',13,8),('Altaria',3,8),('Zangoose',13,14),('Seviper',14,14),('Lunatone',16,16),('Solrock',16,16),('Barboach',18,11),('Whiscash',18,11),('Corphish',18,14),('Crawdaunt',18,2),('Baltoy',11,16),('Claydol',11,16),('Lileep',16,10),('Cradily',16,10),('Anorith',16,1),('Armaldo',16,1),('Feebas',18,14),('Milotic',18,14),('Castform',13,14),('Kecleon',13,14),('Shuppet',9,14),('Banette',9,14),('Duskull',9,14),('Dusclops',9,14),('Tropius',10,8),('Chimecho',15,14),('Absol',2,14),('Wynaut',15,14),('Snorunt',12,14),('Glalie',12,14),('Spheal',12,19),('Sealeo',12,19),('Walrein',12,19),('Clamperl',18,14),('Huntail',18,14),('Gorebyss',18,14),('Relicanth',18,17),('Luvdisc',18,14),('Bagon',3,14),('Shelgon',3,14),('Salamence',3,8),('Beldum',17,16),('Metang',17,16),('Metagross',17,16),('Regirock',16,14),('Regice',12,14),('Registeel',17,14),('Latias',3,16),('Latios',3,16),('Kyogre',18,14),('Groudon',11,14),('Rayquaza',3,8),('Jirachi',17,16),('Deoxys',15,14),('Turtwig',10,14),('Grotle',10,14),('Torterra',10,11),('Chimchar',7,14),('Monferno',7,6),('Infernape',7,6),('Piplup',18,14),('Prinplup',18,14),('Empoleon',18,18),('Starly',13,8),('Staravia',13,8),('Staraptor',13,8),('Bidoof',13,14),('Bibarel',13,19),('Kricketot',1,14),('Kricketune',1,14),('Shinx',4,14),('Luxio',4,14),('Luxray',4,14),('Budew',10,15),('Roserade',10,15),('Cranidos',16,14),('Rampardos',16,14),('Shieldon',16,18),('Bastiodon',16,18),('Burmy',1,14),('Wormadam',1,10),('Mothim',1,8),('Combee',1,8),('Vespiquen',1,8),('Pachirisu',4,14),('Buizel',18,14),('Floatzel',18,14),('Cherubi',10,14),('Cherrim',10,14),('Shellos',18,14),('Gastrodon',18,11),('Ambipom',13,14),('Drifloon',9,8),('Drifblim',9,8),('Buneary',13,14),('Lopunny',13,14),('Mismagius',9,14),('Honchkrow',2,8),('Glameow',13,14),('Purugly',13,14),('Chingling',15,14),('Stunky',14,2),('Skuntank',14,2),('Bronzor',17,16),('Bronzong',17,16),('Bonsly',16,14),('Mime Jr.',15,5),('Happiny',13,14),('Chatot',13,8),('Spiritomb',9,2),('Gible',3,11),('Gabite',3,11),('Garchomp',3,11),('Munchlax',13,14),('Riolu',6,14),('Lucario',6,18),('Hippopotas',11,14),('Hippowdon',11,14),('Skorupi',14,1),('Drapion',14,2),('Croagunk',14,6),('Toxicroak',14,6),('Carnivine',10,14),('Finneon',18,14),('Lumineon',18,14),('Mantyke',18,8),('Snover',10,12),('Abomasnow',10,12),('Weavile',2,12),('Magnezone',4,18),('Lickilicky',13,14),('Rhyperior',11,17),('Tangrowth',10,14),('Electivire',4,14),('Magmortar',7,14),('Togekiss',5,8),('Yanmega',1,8),('Leafeon',10,14),('Glaceon',12,14),('Gliscor',11,8),('Mamoswine',12,11),('Porygon-Z',13,14),('Gallade',15,6),('Probopass',16,18),('Dusknoir',9,14),('Froslass',12,9),('Rotom',4,9),('Uxie',15,14),('Mesprit',15,14),('Azelf',15,14),('Dialga',17,3),('Palkia',18,3),('Heatran',7,18),('Regigigas',13,14),('Giratina',9,3),('Cresselia',15,14),('Phione',18,14),('Manaphy',18,14),('Darkrai',2,14),('Shaymin',10,14),('Arceus',13,14),('Victini',15,7),('Snivy',10,14),('Servine',10,14),('Serperior',10,14),('Tepig',7,14),('Pignite',7,6),('Emboar',7,6),('Oshawott',18,14),('Dewott',18,14),('Samurott',18,14),('Patrat',13,14),('Watchog',13,14),('Lillipup',13,14),('Herdier',13,14),('Stoutland',13,14),('Purrloin',2,14),('Liepard',2,14),('Pansage',10,14),('Simisage',10,14),('Pansear',7,14),('Simisear',7,14),('Panpour',18,14),('Simipour',18,14),('Munna',15,14),('Musharna',15,14),('Pidove',13,8),('Tranquill',13,8),('Unfezant',13,8),('Blitzle',4,14),('Zebstrika',4,14),('Roggenrola',16,14),('Boldore',16,14),('Gigalith',16,14),('Woobat',15,8),('Swoobat',15,8),('Drilbur',11,14),('Excadrill',11,18),('Audino',13,14),('Timburr',6,14),('Gurdurr',6,14),('Conkeldurr',6,14),('Tympole',18,14),('Palpitoad',18,11),('Seismitoad',18,11),('Throh',6,14),('Sawk',6,14),('Sewaddle',1,10),('Swadloon',1,10),('Leavanny',1,10),('Venipede',1,15),('Whirlipede',1,15),('Scolipede',1,15),('Cottonee',10,5),('Whimsicott',10,5),('Petilil',10,14),('Lilligant',10,14),('Basculin',18,14),('Sandile',11,2),('Krokorok',11,2),('Krookodile',11,2),('Darumaka',7,14),('Darmanitan',7,14),('Maractus',10,14),('Dwebble',1,17),('Crustle',1,17),('Scraggy',2,6),('Scrafty',2,6),('Sigilyph',15,8),('Yamask',9,14),('Cofagrigus',9,14),('Tirtouga',18,17),('Carracosta',18,17),('Archen',16,8),('Archeops',16,8),('Trubbish',14,14),('Garbodor',14,14),('Zorua',2,14),('Zoroark',2,14),('Minccino',13,14),('Cinccino',13,14),('Gothita',15,14),('Gothorita',15,14),('Gothitelle',15,14),('Solosis',15,14),('Duosion',15,14),('Reuniclus',15,14),('Ducklett',18,8),('Swanna',18,8),('Vanillite',12,14),('Vanillish',12,14),('Vanilluxe',12,14),('Deerling',13,10),('Sawsbuck',13,10),('Emolga',4,8),('Karrablast',1,14),('Escavalier',1,18),('Foongus',10,15),('Amoonguss',10,15),('Frillish',18,9),('Jellicent',18,9),('Alomomola',18,14),('Joltik',1,4),('Galvantula',1,4),('Ferroseed',10,18),('Ferrothorn',10,18),('Klink',17,14),('Klang',17,14),('Klinklang',17,14),('Tynamo',4,14),('Eelektrik',4,14),('Eelektross',4,14),('Elgyem',15,14),('Beheeyem',15,14),('Litwick',9,7),('Lampent',9,7),('Chandelure',9,7),('Axew',3,14),('Fraxure',3,14),('Haxorus',3,14),('Cubchoo',12,14),('Beartic',12,14),('Cryogonal',12,14),('Shelmet',1,14),('Accelgor',1,14),('Stunfisk',11,4),('Mienfoo',6,14),('Mienshao',6,14),('Druddigon',3,14),('Golett',11,9),('Golurk',11,9),('Pawniard',2,18),('Bisharp',2,18),('Bouffalant',13,14),('Rufflet',13,8),('Braviary',13,8),('Vullaby',2,8),('Mandibuzz',2,8),('Heatmor',7,14),('Durant',1,18),('Deino',2,3),('Zweilous',2,3),('Hydreigon',2,3),('Larvesta',1,7),('Volcarona',1,7),('Cobalion',17,6),('Terrakion',16,6),('Virizion',10,6),('Tornadus',8,14),('Thundurus',4,8),('Reshiram',3,7),('Zekrom',3,4),('Landorus',11,8),('Kyurem',3,12),('Keldeo',18,6),('Meloetta',13,16),('Genesect',1,18),('Chespin',10,14),('Quilladin',10,14),('Chesnaught',10,6),('Fennekin',7,14),('Braixen',7,14),('Delphox',7,16),('Froakie',18,14),('Frogadier',18,14),('Greninja',18,2),('Bunnelby',13,14),('Diggersby',13,11),('Fletchling',13,8),('Fletchinder',7,8),('Talonflame',7,8),('Scatterbug',1,14),('Spewpa',1,14),('Vivillon',1,8),('Litleo',7,13),('Pyroar',7,13),('Flabébé',5,14),('Floette',5,14),('Florges',5,14),('Skiddo',10,14),('Gogoat',10,14),('Pancham',6,14),('Pangoro',6,2),('Furfrou',13,14),('Espurr',15,14),('Meowstic',15,14),('Honedge',17,9),('Doublade',17,9),('Aegislash',17,9),('Spritzee',5,14),('Aromatisse',5,14),('Swirlix',5,14),('Slurpuff',5,14),('Inkay',2,16),('Malamar',2,16),('Binacle',16,19),('Barbaracle',16,19),('Skrelp',14,19),('Dragalge',14,3),('Clauncher',18,14),('Clawitzer',18,14),('Helioptile',4,13),('Heliolisk',4,13),('Tyrunt',16,3),('Tyrantrum',16,3),('Amaura',16,12),('Aurorus',16,12),('Sylveon',5,14),('Hawlucha',6,8),('Dedenne',4,5),('Carbink',16,5),('Goomy',3,14),('Sliggoo',3,14),('Goodra',3,14),('Klefki',17,5),('Phantump',9,10),('Trevenant',9,10),('Pumpkaboo',9,10),('Gourgeist',9,10),('Bergmite',12,14),('Avalugg',12,14),('Noibat',8,3),('Noivern',8,3),('Xerneas',5,14),('Yveltal',2,8),('Zygarde',3,11),('Diancie',16,5),('Hoopa',15,9),('Volcanion',7,19),('Rowlet',10,8),('Dartrix',10,8),('Decidueye',10,9),('Litten',7,14),('Torracat',7,14),('Incineroar',7,2),('Popplio',18,14),('Brionne',18,14),('Primarina',18,5),('Pikipek',13,8),('Trumbeak',13,8),('Toucannon',13,8),('Yungoos',13,14),('Gumshoos',13,14),('Grubbin',1,14),('Charjabug',1,4),('Vikavolt',1,4),('Crabrawler',6,14),('Crabominable',6,12),('Oricorio',7,8),('Cutiefly',1,5),('Ribombee',1,5),('Rockruff',16,14),('Lycanroc',16,14),('Wishiwashi',18,14),('Mareanie',14,19),('Toxapex',14,19),('Mudbray',11,14),('Mudsdale',11,14),('Dewpider',18,1),('Araquanid',18,1),('Fomantis',10,14),('Lurantis',10,14),('Morelull',10,5),('Shiinotic',10,5),('Salandit',14,7),('Salazzle',14,7),('Stufful',13,6),('Bewear',13,6),('Bounsweet',10,14),('Steenee',10,14),('Tsareena',10,14),('Comfey',5,14),('Oranguru',13,16),('Passimian',6,14),('Wimpod',1,19),('Golisopod',1,19),('Sandygast',9,11),('Palossand',9,11),('Pyukumuku',18,14),('Type: Null',13,14),('Silvally',13,14),('Minior',16,8),('Komala',13,14),('Turtonator',7,3),('Togedemaru',4,18),('Mimikyu',9,5),('Bruxish',18,16),('Drampa',13,3),('Dhelmise',9,10),('Jangmo-o',3,14),('Hakamo-o',3,6),('Kommo-o',3,6),('Tapu Koko',4,5),('Tapu Lele',15,5),('Tapu Bulu',10,5),('Tapu Fini',18,5),('Cosmog',15,14),('Cosmoem',15,14),('Solgaleo',15,18),('Lunala',15,9),('Nihilego',16,15),('Buzzwole',1,6),('Pheromosa',1,6),('Xurkitree',4,14),('Celesteela',17,8),('Kartana',10,18),('Guzzlord',2,3),('Necrozma',15,14),('Magearna',17,5),('Marshadow',6,9),('Poipole',14,14),('Naganadel',14,3),('Stakataka',16,18),('Blacephalon',7,9),('Zeraora',4,14),('Meltan',17,14),('Melmetal',17,14),('Grookey',10,14),('Thwackey',10,14),('Rillaboom',10,14),('Scorbunny',7,14),('Raboot',7,14),('Cinderace',7,14),('Sobble',18,14),('Drizzile',18,14),('Inteleon',18,14),('Skwovet',13,14),('Greedent',13,14),('Rookidee',8,14),('Corvisquire',8,14),('Corviknight',8,18),('Blipbug',1,14),('Dottler',1,16),('Orbeetle',1,16),('Nickit',2,14),('Thievul',2,14),('Gossifleur',10,14),('Eldegoss',10,14),('Wooloo',13,14),('Dubwool',13,14),('Chewtle',18,14),('Drednaw',18,17),('Yamper',4,14),('Boltund',4,14),('Rolycoly',16,14),('Carkol',16,7),('Coalossal',16,7),('Applin',10,3),('Flapple',10,3),('Appletun',10,3),('Silicobra',11,14),('Sandaconda',11,14),('Cramorant',8,19),('Arrokuda',18,14),('Barraskewda',18,14),('Toxel',4,15),('Toxtricity',4,15),('Sizzlipede',7,1),('Centiskorch',7,1),('Clobbopus',6,14),('Grapploct',6,14),('Sinistea',9,14),('Polteageist',9,14),('Hatenna',15,14),('Hattrem',15,14),('Hatterene',15,5),('Impidimp',2,5),('Morgrem',2,5),('Grimmsnarl',2,5),('Obstagoon',2,13),('Perrserker',17,14),('Cursola',9,14),('Sirfetch''d',6,14),('Mr. Rime',12,16),('Runerigus',11,9),('Milcery',5,14),('Alcremie',5,14),('Falinks',6,14),('Pincurchin',4,14),('Snom',12,1),('Frosmoth',12,1),('Stonjourner',16,14),('Eiscue',12,14),('Indeedee',15,13),('Morpeko',4,2),('Cufant',17,14),('Copperajah',17,14),('Dracozolt',4,3),('Arctozolt',4,12),('Dracovish',18,3),('Arctovish',18,12),('Duraludon',17,3),('Dreepy',3,9),('Drakloak',3,9),('Dragapult',3,9),('Zacian',5,14),('Zamazenta',6,14),('Eternatus',14,3),('Kubfu',6,14),('Urshifu',6,2),('Zarude',2,10),('Regieleki',4,14),('Regidrago',3,14),('Glastrier',12,14),('Spectrier',9,14),('Calyrex',15,10),('Wyrdeer',13,16),('Kleavor',1,17),('Ursaluna',11,13),('Basculegion',18,9),('Sneasler',6,15),('Overqwil',2,15),('Enamorus',5,8),('Sprigatito',10,14),('Floragato',10,14),('Meowscarada',10,2),('Fuecoco',7,14),('Crocalor',7,14),('Skeledirge',7,9),('Quaxly',18,14),('Quaxwell',18,14),('Quaquaval',18,6),('Lechonk',13,14),('Oinkologne',13,14),('Tarountula',1,14),('Spidops',1,14),('Nymble',1,14),('Lokix',1,2),('Pawmi',4,14),('Pawmo',4,6),('Pawmot',4,6),('Tandemaus',13,14),('Maushold',13,14),('Fidough',5,14),('Dachsbun',5,14),('Smoliv',10,13),('Dolliv',10,13),('Arboliva',10,13),('Squawkabilly',13,8),('Nacli',16,14),('Naclstack',16,14),('Garganacl',16,14),('Charcadet',7,14),('Armarouge',7,16),('Ceruledge',7,9),('Tadbulb',4,14),('Bellibolt',4,14),('Wattrel',4,8),('Kilowattrel',4,8),('Maschiff',2,14),('Mabosstiff',2,14),('Shroodle',14,13),('Grafaiai',14,13),('Bramblin',10,9),('Brambleghast',10,9),('Toedscool',11,10),('Toedscruel',11,10),('Klawf',16,14),('Capsakid',10,14),('Scovillain',10,7),('Rellor',1,14),('Rabsca',1,16),('Flittle',15,14),('Espathra',15,14),('Tinkatink',5,18),('Tinkatuff',5,18),('Tinkaton',5,18),('Wiglett',18,14),('Wugtrio',18,14),('Bombirdier',8,2),('Finizen',18,14),('Palafin',18,14),('Varoom',17,15),('Revavroom',17,15),('Cyclizar',3,13),('Orthworm',17,14),('Glimmet',16,15),('Glimmora',16,15),('Greavard',9,14),('Houndstone',9,14),('Flamigo',8,6),('Cetoddle',12,14),('Cetitan',12,14),('Veluza',18,16),('Dondozo',18,14),('Tatsugiri',3,19),('Annihilape',6,9),('Clodsire',14,11),('Farigiraf',13,16),('Dudunsparce',13,14),('Kingambit',2,18),('Great Tusk',11,6),('Scream Tail',5,16),('Brute Bonnet',10,2),('Flutter Mane',9,5),('Slither Wing',1,6),('Sandy Shocks',4,11),('Iron Treads',11,18),('Iron Bundle',12,19),('Iron Hands',6,4),('Iron Jugulis',2,8),('Iron Moth',7,15),('Iron Thorns',16,4),('Frigibax',3,12),('Arctibax',3,12),('Baxcalibur',3,12),('Gimmighoul',9,14),('Gholdengo',17,9),('Wo-Chien',2,10),('Chien-Pao',2,12),('Ting-Lu',2,11),('Chi-Yu',2,7),('Roaring Moon',3,2),('Iron Valiant',5,6),('Koraidon',6,3),('Miraidon',4,3),('Walking Wake',18,3),('Iron Leaves',10,16),('Dipplin',10,3),('Poltchageist',10,9),('Sinistcha',10,9),('Okidogi',14,6),('Munkidori',14,16),('Fezandipiti',14,5),('Ogerpon',10,14),('Archaludon',17,3),('Hydrapple',10,3),('Gouging Fire',7,3),('Raging Bolt',4,3),('Iron Boulder',16,16),('Iron Crown',17,16),('Terapagos',13,14),('Pecharunt',14,9)

insert into BASESTATS values (1,45,49,49,65,65,45),(2,60,62,63,80,80,60),(3,80,82,83,100,100,80),(4,39,52,43,60,50,65),(5,58,64,58,80,65,80),(6,78,84,78,109,85,100),(7,44,48,65,50,64,43),(8,59,63,80,65,80,58),(9,79,83,100,85,105,78),(10,45,30,35,20,20,45),(11,50,20,55,25,25,30),(12,60,45,50,90,80,70),(13,40,35,30,20,20,50),(14,45,25,50,25,25,35),(15,65,90,40,45,80,75),(16,40,45,40,35,35,56),(17,63,60,55,50,50,71),(18,83,80,75,70,70,101),(19,30,56,35,25,35,72),(20,55,81,60,50,70,97),(21,40,60,30,31,31,70),(22,65,90,65,61,61,100),(23,35,60,44,40,54,55),(24,60,95,69,65,79,80),(25,35,55,40,50,50,90),(26,60,90,55,90,80,110),(27,50,75,85,20,30,40),(28,75,100,110,45,55,65),(29,55,47,52,40,40,41),(30,70,62,67,55,55,56),(31,90,92,87,75,85,76),(32,46,57,40,40,40,50),(33,61,72,57,55,55,65),(34,81,102,77,85,75,85),(35,70,45,48,60,65,35),(36,95,70,73,95,90,60),(37,38,41,40,50,65,65),(38,73,76,75,81,100,100),(39,115,45,20,45,25,20),(40,140,70,45,85,50,45),(41,40,45,35,30,40,55),(42,75,80,70,65,75,90),(43,45,50,55,75,65,30),(44,60,65,70,85,75,40),(45,75,80,85,110,90,50),(46,35,70,55,45,55,25),(47,60,95,80,60,80,30),(48,60,55,50,40,55,45),(49,70,65,60,90,75,90),(50,10,55,25,35,45,95),(51,35,100,50,50,70,120),(52,40,45,35,40,40,90),(53,65,70,60,65,65,115),(54,50,52,48,65,50,55),(55,80,82,78,95,80,85),(56,40,80,35,35,45,70),(57,65,105,60,60,70,95),(58,55,70,45,70,50,60),(59,90,110,80,100,80,95),(60,40,50,40,40,40,90),(61,65,65,65,50,50,90),(62,90,95,95,70,90,70),(63,25,20,15,105,55,90),(64,40,35,30,120,70,105),(65,55,50,45,135,95,120),(66,70,80,50,35,35,35),(67,80,100,70,50,60,45),(68,90,130,80,65,85,55),(69,50,75,35,70,30,40),(70,65,90,50,85,45,55),(71,80,105,65,100,70,70),(72,40,40,35,50,100,70),(73,80,70,65,80,120,100),(74,40,80,100,30,30,20),(75,55,95,115,45,45,35),(76,80,120,130,55,65,45),(77,50,85,55,65,65,90),(78,65,100,70,80,80,105),(79,90,65,65,40,40,15),(80,95,75,110,100,80,30),(81,25,35,70,95,55,45),(82,50,60,95,120,70,70),(83,52,90,55,58,62,60),(84,35,85,45,35,35,75),(85,60,110,70,60,60,110),(86,65,45,55,45,70,45),(87,90,70,80,70,95,70),(88,80,80,50,40,50,25),(89,105,105,75,65,100,50),(90,30,65,100,45,25,40),(91,50,95,180,85,45,70),(92,30,35,30,100,35,80),(93,45,50,45,115,55,95),(94,60,65,60,130,75,110),(95,35,45,160,30,45,70),(96,60,48,45,43,90,42),(97,85,73,70,73,115,67),(98,30,105,90,25,25,50),(99,55,130,115,50,50,75),(100,40,30,50,55,55,100),(101,60,50,70,80,80,150),(102,60,40,80,60,45,40),(103,95,95,85,125,75,55),(104,50,50,95,40,50,35),(105,60,80,110,50,80,45),(106,50,120,53,35,110,87),(107,50,105,79,35,110,76),(108,90,55,75,60,75,30),(109,40,65,95,60,45,35),(110,65,90,120,85,70,60),(111,80,85,95,30,30,25),(112,105,130,120,45,45,40),(113,250,5,5,35,105,50),(114,65,55,115,100,40,60),(115,105,95,80,40,80,90),(116,30,40,70,70,25,60),(117,55,65,95,95,45,85),(118,45,67,60,35,50,63),(119,80,92,65,65,80,68),(120,30,45,55,70,55,85),(121,60,75,85,100,85,115),(122,40,45,65,100,120,90),(123,70,110,80,55,80,105),(124,65,50,35,115,95,95),(125,65,83,57,95,85,105),(126,65,95,57,100,85,93),(127,65,125,100,55,70,85),(128,75,100,95,40,70,110),(129,20,10,55,15,20,80),(130,95,125,79,60,100,81),(131,130,85,80,85,95,60),(132,48,48,48,48,48,48),(133,55,55,50,45,65,55),(134,130,65,60,110,95,65),(135,65,65,60,110,95,130),(136,65,130,60,95,110,65),(137,65,60,70,85,75,40),(138,35,40,100,90,55,35),(139,70,60,125,115,70,55),(140,30,80,90,55,45,55),(141,60,115,105,65,70,80),(142,80,105,65,60,75,130),(143,160,110,65,65,110,30),(144,90,85,100,95,125,85),(145,90,90,85,125,90,100),(146,90,100,90,125,85,90),(147,41,64,45,50,50,50),(148,61,84,65,70,70,70),(149,91,134,95,100,100,80),(150,106,110,90,154,90,130),(151,100,100,100,100,100,100),(152,45,49,65,49,65,45),(153,60,62,80,63,80,60),(154,80,82,100,83,100,80),(155,39,52,43,60,50,65),(156,58,64,58,80,65,80),(157,78,84,78,109,85,100),(158,50,65,64,44,48,43),(159,65,80,80,59,63,58),(160,85,105,100,79,83,78),(161,35,46,34,35,45,20),(162,85,76,64,45,55,90),(163,60,30,30,36,56,50),(164,100,50,50,86,96,70),(165,40,20,30,40,80,55),(166,55,35,50,55,110,85),(167,40,60,40,40,40,30),(168,70,90,70,60,70,40),(169,85,90,80,70,80,130),(170,75,38,38,56,56,67),(171,125,58,58,76,76,67),(172,20,40,15,35,35,60),(173,50,25,28,45,55,15),(174,90,30,15,40,20,15),(175,35,20,65,40,65,20),(176,55,40,85,80,105,40),(177,40,50,45,70,45,70),(178,65,75,70,95,70,95),(179,55,40,40,65,45,35),(180,70,55,55,80,60,45),(181,90,75,85,115,90,55),(182,75,80,95,90,100,50),(183,70,20,50,20,50,40),(184,100,50,80,60,80,50),(185,70,100,115,30,65,30),(186,90,75,75,90,100,70),(187,35,35,40,35,55,50),(188,55,45,50,45,65,80),(189,75,55,70,55,95,110),(190,55,70,55,40,55,85),(191,30,30,30,30,30,30),(192,75,75,55,105,85,30),(193,65,65,45,75,45,95),(194,55,45,45,25,25,15),(195,95,85,85,65,65,35),(196,65,65,60,130,95,110),(197,95,65,110,60,130,65),(198,60,85,42,85,42,91),(199,95,75,80,100,110,30),(200,60,60,60,85,85,85),(201,48,72,48,72,48,48),(202,190,33,58,33,58,33),(203,70,80,65,90,65,85),(204,50,65,90,35,35,15),(205,75,90,140,60,60,40),(206,100,70,70,65,65,45),(207,65,75,105,35,65,85),(208,75,85,200,55,65,30),(209,60,80,50,40,40,30),(210,90,120,75,60,60,45),(211,65,95,85,55,55,85),(212,70,130,100,55,80,65),(213,20,10,230,10,230,5),(214,80,125,75,40,95,85),(215,55,95,55,35,75,115),(216,60,80,50,50,50,40),(217,90,130,75,75,75,55),(218,40,40,40,70,40,20),(219,60,50,120,90,80,30),(220,50,50,40,30,30,50),(221,100,100,80,60,60,50),(222,65,55,95,65,95,35),(223,35,65,35,65,35,65),(224,75,105,75,105,75,45),(225,45,55,45,65,45,75),(226,85,40,70,80,140,70),(227,65,80,140,40,70,70),(228,45,60,30,80,50,65),(229,75,90,50,110,80,95),(230,75,95,95,95,95,85),(231,90,60,60,40,40,40),(232,90,120,120,60,60,50),(233,85,80,90,105,95,60),(234,73,95,62,85,65,85),(235,55,20,35,20,45,75),(236,35,35,35,35,35,35),(237,50,95,95,35,110,70),(238,45,30,15,85,65,65),(239,45,63,37,65,55,95),(240,45,75,37,70,55,83),(241,95,80,105,40,70,100),(242,255,10,10,75,135,55),(243,90,85,75,115,100,115),(244,115,115,85,90,75,100),(245,100,75,115,90,115,85),(246,50,64,50,45,50,41),(247,70,84,70,65,70,51),(248,100,134,110,95,100,61),(249,106,90,130,90,154,110),(250,106,130,90,110,154,90),(251,100,100,100,100,100,100),(252,40,45,35,65,55,70),(253,50,65,45,85,65,95),(254,70,85,65,105,85,120),(255,45,60,40,70,50,45),(256,60,85,60,85,60,55),(257,80,120,70,110,70,80),(258,50,70,50,50,50,40),(259,70,85,70,60,70,50),(260,100,110,90,85,90,60),(261,35,55,35,30,30,35),(262,70,90,70,60,60,70),(263,38,30,41,30,41,60),(264,78,70,61,50,61,100),(265,45,45,35,20,30,20),(266,50,35,55,25,25,15),(267,60,70,50,100,50,65),(268,50,35,55,25,25,15),(269,60,50,70,50,90,65),(270,40,30,30,40,50,30),(271,60,50,50,60,70,50),(272,80,70,70,90,100,70),(273,40,40,50,30,30,30),(274,70,70,40,60,40,60),(275,90,100,60,90,60,80),(276,40,55,30,30,30,85),(277,60,85,60,75,50,125),(278,40,30,30,55,30,85),(279,60,50,100,95,70,65),(280,28,25,25,45,35,40),(281,38,35,35,65,55,50),(282,68,65,65,125,115,80),(283,40,30,32,50,52,65),(284,70,60,62,100,82,80),(285,60,40,60,40,60,35),(286,60,130,80,60,60,70),(287,60,60,60,35,35,30),(288,80,80,80,55,55,90),(289,150,160,100,95,65,100),(290,31,45,90,30,30,40),(291,61,90,45,50,50,160),(292,1,90,45,30,30,40),(293,64,51,23,51,23,28),(294,84,71,43,71,43,48),(295,104,91,63,91,73,68),(296,72,60,30,20,30,25),(297,144,120,60,40,60,50),(298,50,20,40,20,40,20),(299,30,45,135,45,90,30),(300,50,45,45,35,35,50),(301,70,65,65,55,55,90),(302,50,75,75,65,65,50),(303,50,85,85,55,55,50),(304,50,70,100,40,40,30),(305,60,90,140,50,50,40),(306,70,110,180,60,60,50),(307,30,40,55,40,55,60),(308,60,60,75,60,75,80),(309,40,45,40,65,40,65),(310,70,75,60,105,60,105),(311,60,50,40,85,75,95),(312,60,40,50,75,85,95),(313,65,73,75,47,85,85),(314,65,47,75,73,85,85),(315,50,60,45,100,80,65),(316,70,43,53,43,53,40),(317,100,73,83,73,83,55),(318,45,90,20,65,20,65),(319,70,120,40,95,40,95),(320,130,70,35,70,35,60),(321,170,90,45,90,45,60),(322,60,60,40,65,45,35),(323,70,100,70,105,75,40),(324,70,85,140,85,70,20),(325,60,25,35,70,80,60),(326,80,45,65,90,110,80),(327,60,60,60,60,60,60),(328,45,100,45,45,45,10),(329,50,70,50,50,50,70),(330,80,100,80,80,80,100),(331,50,85,40,85,40,35),(332,70,115,60,115,60,55),(333,45,40,60,40,75,50),(334,75,70,90,70,105,80),(335,73,115,60,60,60,90),(336,73,100,60,100,60,65),(337,90,55,65,95,85,70),(338,90,95,85,55,65,70),(339,50,48,43,46,41,60),(340,110,78,73,76,71,60),(341,43,80,65,50,35,35),(342,63,120,85,90,55,55),(343,40,40,55,40,70,55),(344,60,70,105,70,120,75),(345,66,41,77,61,87,23),(346,86,81,97,81,107,43),(347,45,95,50,40,50,75),(348,75,125,100,70,80,45),(349,20,15,20,10,55,80),(350,95,60,79,100,125,81),(351,70,70,70,70,70,70),(352,60,90,70,60,120,40),(353,44,75,35,63,33,45),(354,64,115,65,83,63,65),(355,20,40,90,30,90,25),(356,40,70,130,60,130,25),(357,99,68,83,72,87,51),(358,75,50,80,95,90,65),(359,65,130,60,75,60,75),(360,95,23,48,23,48,23),(361,50,50,50,50,50,50),(362,80,80,80,80,80,80),(363,70,40,50,55,50,25),(364,90,60,70,75,70,45),(365,110,80,90,95,90,65),(366,35,64,85,74,55,32),(367,55,104,105,94,75,52),(368,55,84,105,114,75,52),(369,100,90,130,45,65,55),(370,43,30,55,40,65,97),(371,45,75,60,40,30,50),(372,65,95,100,60,50,50),(373,95,135,80,110,80,100),(374,40,55,80,35,60,30),(375,60,75,100,55,80,50),(376,80,135,130,95,90,70),(377,80,100,200,50,100,50),(378,80,50,100,100,200,50),(379,80,75,150,75,150,50),(380,80,80,90,110,130,110),(381,80,90,80,130,110,110),(382,100,100,90,150,140,90),(383,100,150,140,100,90,90),(384,105,150,90,150,90,95),(385,100,100,100,100,100,100),(386,50,150,50,150,50,150),(387,55,68,64,45,55,31),(388,75,89,85,55,65,36),(389,95,109,105,75,85,56),(390,44,58,44,58,44,61),(391,64,78,52,78,52,81),(392,76,104,71,104,71,108),(393,53,51,53,61,56,40),(394,64,66,68,81,76,50),(395,84,86,88,111,101,60),(396,40,55,30,30,30,60),(397,55,75,50,40,40,80),(398,85,120,70,50,60,100),(399,59,45,40,35,40,31),(400,79,85,60,55,60,71),(401,37,25,41,25,41,25),(402,77,85,51,55,51,65),(403,45,65,34,40,34,45),(404,60,85,49,60,49,60),(405,80,120,79,95,79,70),(406,40,30,35,50,70,55),(407,60,70,65,125,105,90),(408,67,125,40,30,30,58),(409,97,165,60,65,50,58),(410,30,42,118,42,88,30),(411,60,52,168,47,138,30),(412,40,29,45,29,45,36),(413,60,59,85,79,105,36),(414,70,94,50,94,50,66),(415,30,30,42,30,42,70),(416,70,80,102,80,102,40),(417,60,45,70,45,90,95),(418,55,65,35,60,30,85),(419,85,105,55,85,50,115),(420,45,35,45,62,53,35),(421,70,60,70,87,78,85),(422,76,48,48,57,62,34),(423,111,83,68,92,82,39),(424,75,100,66,60,66,115),(425,90,50,34,60,44,70),(426,150,80,44,90,54,80),(427,55,66,44,44,56,85),(428,65,76,84,54,96,105),(429,60,60,60,105,105,105),(430,100,125,52,105,52,71),(431,49,55,42,42,37,85),(432,71,82,64,64,59,112),(433,45,30,50,65,50,45),(434,63,63,47,41,41,74),(435,103,93,67,71,61,84),(436,57,24,86,24,86,23),(437,67,89,116,79,116,33),(438,50,80,95,10,45,10),(439,20,25,45,70,90,60),(440,100,5,5,15,65,30),(441,76,65,45,92,42,91),(442,50,92,108,92,108,35),(443,58,70,45,40,45,42),(444,68,90,65,50,55,82),(445,108,130,95,80,85,102),(446,135,85,40,40,85,5),(447,40,70,40,35,40,60),(448,70,110,70,115,70,90),(449,68,72,78,38,42,32),(450,108,112,118,68,72,47),(451,40,50,90,30,55,65),(452,70,90,110,60,75,95),(453,48,61,40,61,40,50),(454,83,106,65,86,65,85),(455,74,100,72,90,72,46),(456,49,49,56,49,61,66),(457,69,69,76,69,86,91),(458,45,20,50,60,120,50),(459,60,62,50,62,60,40),(460,90,92,75,92,85,60),(461,70,120,65,45,85,125),(462,70,70,115,130,90,60),(463,110,85,95,80,95,50),(464,115,140,130,55,55,40),(465,100,100,125,110,50,50),(466,75,123,67,95,85,95),(467,75,95,67,125,95,83),(468,85,50,95,120,115,80),(469,86,76,86,116,56,95),(470,65,110,130,60,65,95),(471,65,60,110,130,95,65),(472,75,95,125,45,75,95),(473,110,130,80,70,60,80),(474,85,80,70,135,75,90),(475,68,125,65,65,115,80),(476,60,55,145,75,150,40),(477,45,100,135,65,135,45),(478,70,80,70,80,70,110),(479,50,50,77,95,77,91),(480,75,75,130,75,130,95),(481,80,105,105,105,105,80),(482,75,125,70,125,70,115),(483,100,120,120,150,100,90),(484,90,120,100,150,120,100),(485,91,90,106,130,106,77),(486,110,160,110,80,110,100),(487,150,100,120,100,120,90),(488,120,70,110,75,120,85),(489,80,80,80,80,80,80),(490,100,100,100,100,100,100),(491,70,90,90,135,90,125),(492,100,100,100,100,100,100),(493,120,120,120,120,120,120),(494,100,100,100,100,100,100),(495,45,45,55,45,55,63),(496,60,60,75,60,75,83),(497,75,75,95,75,95,113),(498,65,63,45,45,45,45),(499,90,93,55,70,55,55),(500,110,123,65,100,65,65),(501,55,55,45,63,45,45),(502,75,75,60,83,60,60),(503,95,100,85,108,70,70),(504,45,55,39,35,39,42),(505,60,85,69,60,69,77),(506,45,60,45,25,45,55),(507,65,80,65,35,65,60),(508,85,110,90,45,90,80),(509,41,50,37,50,37,66),(510,64,88,50,88,50,106),(511,50,53,48,53,48,64),(512,75,98,63,98,63,101),(513,50,53,48,53,48,64),(514,75,98,63,98,63,101),(515,50,53,48,53,48,64),(516,75,98,63,98,63,101),(517,76,25,45,67,55,24),(518,116,55,85,107,95,29),(519,50,55,50,36,30,43),(520,62,77,62,50,42,65),(521,80,115,80,65,55,93),(522,45,60,32,50,32,76),(523,75,100,63,80,63,116),(524,55,75,85,25,25,15),(525,70,105,105,50,40,20),(526,85,135,130,60,80,25),(527,65,45,43,55,43,72),(528,67,57,55,77,55,114),(529,60,85,40,30,45,68),(530,110,135,60,50,65,88),(531,103,60,86,60,86,50),(532,75,80,55,25,35,35),(533,85,105,85,40,50,40),(534,105,140,95,55,65,45),(535,50,50,40,50,40,64),(536,75,65,55,65,55,69),(537,105,95,75,85,75,74),(538,120,100,85,30,85,45),(539,75,125,75,30,75,85),(540,45,53,70,40,60,42),(541,55,63,90,50,80,42),(542,75,103,80,70,80,92),(543,30,45,59,30,39,57),(544,40,55,99,40,79,47),(545,60,100,89,55,69,112),(546,40,27,60,37,50,66),(547,60,67,85,77,75,116),(548,45,35,50,70,50,30),(549,70,60,75,110,75,90),(550,70,92,65,80,55,98),(551,50,72,35,35,35,65),(552,60,82,45,45,45,74),(553,95,117,80,65,70,92),(554,70,90,45,15,45,50),(555,105,140,55,30,55,95),(556,75,86,67,106,67,60),(557,50,65,85,35,35,55),(558,70,105,125,65,75,45),(559,50,75,70,35,70,48),(560,65,90,115,45,115,58),(561,72,58,80,103,80,97),(562,38,30,85,55,65,30),(563,58,50,145,95,105,30),(564,54,78,103,53,45,22),(565,74,108,133,83,65,32),(566,55,112,45,74,45,70),(567,75,140,65,112,65,110),(568,50,50,62,40,62,65),(569,80,95,82,60,82,75),(570,40,65,40,80,40,65),(571,60,105,60,120,60,105),(572,55,50,40,40,40,75),(573,75,95,60,65,60,115),(574,45,30,50,55,65,45),(575,60,45,70,75,85,55),(576,70,55,95,95,110,65),(577,45,30,40,105,50,20),(578,65,40,50,125,60,30),(579,110,65,75,125,85,30),(580,62,44,50,44,50,55),(581,75,87,63,87,63,98),(582,36,50,50,65,60,44),(583,51,65,65,80,75,59),(584,71,95,85,110,95,79),(585,60,60,50,40,50,75),(586,80,100,70,60,70,95),(587,55,75,60,75,60,103),(588,50,75,45,40,45,60),(589,70,135,105,60,105,20),(590,69,55,45,55,55,15),(591,114,85,70,85,80,30),(592,55,40,50,65,85,40),(593,100,60,70,85,105,60),(594,165,75,80,40,45,65),(595,50,47,50,57,50,65),(596,70,77,60,97,60,108),(597,44,50,91,24,86,10),(598,74,94,131,54,116,20),(599,40,55,70,45,60,30),(600,60,80,95,70,85,50),(601,60,100,115,70,85,90),(602,35,55,40,45,40,60),(603,65,85,70,75,70,40),(604,85,115,80,105,80,50),(605,55,55,55,85,55,30),(606,75,75,75,125,95,40),(607,50,30,55,65,55,20),(608,60,40,60,95,60,55),(609,60,55,90,145,90,80),(610,46,87,60,30,40,57),(611,66,117,70,40,50,67),(612,76,147,90,60,70,97),(613,55,70,40,60,40,40),(614,95,130,80,70,80,50),(615,80,50,50,95,135,105),(616,50,40,85,40,65,25),(617,80,70,40,100,60,145),(618,109,66,84,81,99,32),(619,45,85,50,55,50,65),(620,65,125,60,95,60,105),(621,77,120,90,60,90,48),(622,59,74,50,35,50,35),(623,89,124,80,55,80,55),(624,45,85,70,40,40,60),(625,65,125,100,60,70,70),(626,95,110,95,40,95,55),(627,70,83,50,37,50,60),(628,100,123,75,57,75,80),(629,70,55,75,45,65,60),(630,110,65,105,55,95,80),(631,85,97,66,105,66,65),(632,58,109,112,48,48,109),(633,52,65,50,45,50,38),(634,72,85,70,65,70,58),(635,92,105,90,125,90,98),(636,55,85,55,50,55,60),(637,85,60,65,135,105,100),(638,91,90,129,90,72,108),(639,91,129,90,72,90,108),(640,91,90,72,90,129,108),(641,79,115,70,125,80,111),(642,79,115,70,125,80,111),(643,100,120,100,150,120,90),(644,100,150,120,120,100,90),(645,89,125,90,115,80,101),(646,125,130,90,130,90,95),(647,91,72,90,129,90,108),(648,100,77,77,128,128,90),(649,71,120,95,120,95,99),(650,56,61,65,48,45,38),(651,61,78,95,56,58,57),(652,88,107,122,74,75,64),(653,40,45,40,62,60,60),(654,59,59,58,90,70,73),(655,75,69,72,114,100,104),(656,41,56,40,62,44,71),(657,54,63,52,83,56,97),(658,72,95,67,103,71,122),(659,38,36,38,32,36,57),(660,85,56,77,50,77,78),(661,45,50,43,40,38,62),(662,62,73,55,56,52,84),(663,78,81,71,74,69,126),(664,38,35,40,27,25,35),(665,45,22,60,27,30,29),(666,80,52,50,90,50,89),(667,62,50,58,73,54,72),(668,86,68,72,109,66,106),(669,44,38,39,61,79,42),(670,54,45,47,75,98,52),(671,78,65,68,112,154,75),(672,66,65,48,62,57,52),(673,123,100,62,97,81,68),(674,67,82,62,46,48,43),(675,95,124,78,69,71,58),(676,75,80,60,65,90,102),(677,62,48,54,63,60,68),(678,74,48,76,83,81,104),(679,45,80,100,35,37,28),(680,59,110,150,45,49,35),(681,60,50,140,50,140,60),(682,78,52,60,63,65,23),(683,101,72,72,99,89,29),(684,62,48,66,59,57,49),(685,82,80,86,85,75,72),(686,53,54,53,37,46,45),(687,86,92,88,68,75,73),(688,42,52,67,39,56,50),(689,72,105,115,54,86,68),(690,50,60,60,60,60,30),(691,65,75,90,97,123,44),(692,50,53,62,58,63,44),(693,71,73,88,120,89,59),(694,44,38,33,61,43,70),(695,62,55,52,109,94,109),(696,58,89,77,45,45,48),(697,82,121,119,69,59,71),(698,77,59,50,67,63,46),(699,123,77,72,99,92,58),(700,95,65,65,110,130,60),(701,78,92,75,74,63,118),(702,67,58,57,81,67,101),(703,50,50,150,50,150,50),(704,45,50,35,55,75,40),(705,68,75,53,83,113,60),(706,90,100,70,110,150,80),(707,57,80,91,80,87,75),(708,43,70,48,50,60,38),(709,85,110,76,65,82,56),(710,49,66,70,44,55,51),(711,65,90,122,58,75,84),(712,55,69,85,32,35,28),(713,95,117,184,44,46,28),(714,40,30,35,45,40,55),(715,85,70,80,97,80,123),(716,126,131,95,131,98,99),(717,126,131,95,131,98,99),(718,108,100,121,81,95,95),(719,50,100,150,100,150,50),(720,80,110,60,150,130,70),(721,80,110,120,130,90,70),(722,68,55,55,50,50,42),(723,78,75,75,70,70,52),(724,78,107,75,100,100,70),(725,45,65,40,60,40,70),(726,65,85,50,80,50,90),(727,95,115,90,80,90,60),(728,50,54,54,66,56,40),(729,60,69,69,91,81,50),(730,80,74,74,126,116,60),(731,35,75,30,30,30,65),(732,55,85,50,40,50,75),(733,80,120,75,75,75,60),(734,48,70,30,30,30,45),(735,88,110,60,55,60,45),(736,47,62,45,55,45,46),(737,57,82,95,55,75,36),(738,77,70,90,145,75,43),(739,47,82,57,42,47,63),(740,97,132,77,62,67,43),(741,75,70,70,98,70,93),(742,40,45,40,55,40,84),(743,60,55,60,95,70,124),(744,45,65,40,30,40,60),(745,75,115,65,55,65,112),(746,45,20,20,25,25,40),(747,50,53,62,43,52,45),(748,50,63,152,53,142,35),(749,70,100,70,45,55,45),(750,100,125,100,55,85,35),(751,38,40,52,40,72,27),(752,68,70,92,50,132,42),(753,40,55,35,50,35,35),(754,70,105,90,80,90,45),(755,40,35,55,65,75,15),(756,60,45,80,90,100,30),(757,48,44,40,71,40,77),(758,68,64,60,111,60,117),(759,70,75,50,45,50,50),(760,120,125,80,55,60,60),(761,42,30,38,30,38,32),(762,52,40,48,40,48,62),(763,72,120,98,50,98,72),(764,51,52,90,82,110,100),(765,90,60,80,90,110,60),(766,100,120,90,40,60,80),(767,25,35,40,20,30,80),(768,75,125,140,60,90,40),(769,55,55,80,70,45,15),(770,85,75,110,100,75,35),(771,55,60,130,30,130,5),(772,95,95,95,95,95,59),(773,95,95,95,95,95,95),(774,60,60,100,60,100,60),(775,65,115,65,75,95,65),(776,60,78,135,91,85,36),(777,65,98,63,40,73,96),(778,55,90,80,50,105,96),(779,68,105,70,70,70,92),(780,78,60,85,135,91,36),(781,70,131,100,86,90,40),(782,45,55,65,45,45,45),(783,55,75,90,65,70,65),(784,75,110,125,100,105,85),(785,70,115,85,95,75,130),(786,70,85,75,130,115,95),(787,70,130,115,85,95,75),(788,70,75,115,95,130,85),(789,43,29,31,29,31,37),(790,43,29,131,29,131,37),(791,137,137,107,113,89,97),(792,137,113,89,137,107,97),(793,109,53,47,127,131,103),(794,107,139,139,53,53,79),(795,71,137,37,137,37,151),(796,83,89,71,173,71,83),(797,97,101,103,107,101,61),(798,59,181,131,59,31,109),(799,223,101,53,97,53,43),(800,97,107,101,127,89,79),(801,80,95,115,130,115,65),(802,90,125,80,90,90,125),(803,67,73,67,73,67,73),(804,73,73,73,127,73,121),(805,61,131,211,53,101,13),(806,53,127,53,151,79,107),(807,88,112,75,102,80,143),(808,46,65,65,55,35,34),(809,135,143,143,80,65,34),(810,50,65,50,40,40,65),(811,70,85,70,55,60,80),(812,100,125,90,60,70,85),(813,50,71,40,40,40,69),(814,65,86,60,55,60,94),(815,80,116,75,65,75,119),(816,50,40,40,70,40,70),(817,65,60,55,95,55,90),(818,70,85,65,125,65,120),(819,70,55,55,35,35,25),(820,120,95,95,55,75,20),(821,38,47,35,33,35,57),(822,68,67,55,43,55,77),(823,98,87,105,53,85,67),(824,25,20,20,25,45,45),(825,50,35,80,50,90,30),(826,60,45,110,80,120,90),(827,40,28,28,47,52,50),(828,70,58,58,87,92,90),(829,40,40,60,40,60,10),(830,60,50,90,80,120,60),(831,42,40,55,40,45,48),(832,72,80,100,60,90,88),(833,50,64,50,38,38,44),(834,90,115,90,48,68,74),(835,59,45,50,40,50,26),(836,69,90,60,90,60,121),(837,30,40,50,40,50,30),(838,80,60,90,60,70,50),(839,110,80,120,80,90,30),(840,40,40,80,40,40,20),(841,70,110,80,95,60,70),(842,110,85,80,100,80,30),(843,52,57,75,35,50,46),(844,72,107,125,65,70,71),(845,70,85,55,85,95,85),(846,41,63,40,40,30,66),(847,61,123,60,60,50,136),(848,40,38,35,54,35,40),(849,75,98,70,114,70,75),(850,50,65,45,50,50,45),(851,100,115,65,90,90,65),(852,50,68,60,50,50,32),(853,80,118,90,70,80,42),(854,40,45,45,74,54,50),(855,60,65,65,134,114,70),(856,42,30,45,56,53,39),(857,57,40,65,86,73,49),(858,57,90,95,136,103,29),(859,45,45,30,55,40,50),(860,65,60,45,75,55,70),(861,95,120,65,95,75,60),(862,93,90,101,60,81,95),(863,70,110,100,50,60,50),(864,60,95,50,145,130,30),(865,62,135,95,68,82,65),(866,80,85,75,110,100,70),(867,58,95,145,50,105,30),(868,45,40,40,50,61,34),(869,65,60,75,110,121,64),(870,65,100,100,70,60,75),(871,48,101,95,91,85,15),(872,30,25,35,45,30,20),(873,70,65,60,125,90,65),(874,100,125,135,20,20,70),(875,75,80,110,65,90,50),(876,60,65,55,105,95,95),(877,58,95,58,70,58,97),(878,72,80,49,40,49,40),(879,122,130,69,80,69,30),(880,90,100,90,80,70,75),(881,90,100,90,90,80,55),(882,90,90,100,70,80,75),(883,90,90,100,80,90,55),(884,70,95,115,120,50,85),(885,28,60,30,40,30,82),(886,68,80,50,60,50,102),(887,88,120,75,100,75,142),(888,92,120,115,80,115,138),(889,92,120,115,80,115,138),(890,140,85,95,145,95,130),(891,60,90,60,53,50,72),(892,100,130,100,63,60,97),(893,105,120,105,70,95,105),(894,80,100,50,100,50,200),(895,200,100,50,100,50,80),(896,100,145,130,65,110,30),(897,100,65,60,145,80,130),(898,100,80,80,80,80,80),(899,103,105,72,105,75,65),(900,70,135,95,45,70,85),(901,130,140,105,45,80,50),(902,120,112,65,80,75,78),(903,80,130,60,40,80,120),(904,85,115,95,65,65,85),(905,74,115,70,135,80,106),(906,40,61,54,45,45,65),(907,61,80,63,60,63,83),(908,76,110,70,81,70,123),(909,67,45,59,63,40,36),(910,81,55,78,90,58,49),(911,104,75,100,110,75,66),(912,55,65,45,50,45,50),(913,70,85,65,65,60,65),(914,85,120,80,85,75,85),(915,54,45,40,35,45,35),(916,110,100,75,59,80,65),(917,35,41,45,29,40,20),(918,60,79,92,52,86,35),(919,33,46,40,21,25,45),(920,71,102,78,52,55,92),(921,45,50,20,40,25,60),(922,60,75,40,50,40,85),(923,70,115,70,70,60,105),(924,50,50,45,40,45,75),(925,74,75,70,65,75,111),(926,37,55,70,30,55,65),(927,57,80,115,50,80,95),(928,41,35,45,58,51,30),(929,52,53,60,78,78,33),(930,78,69,90,125,109,39),(931,82,96,51,45,51,92),(932,55,55,75,35,35,25),(933,60,60,100,35,65,35),(934,100,100,130,45,90,35),(935,40,50,40,50,40,35),(936,85,60,100,125,80,75),(937,75,125,80,60,100,85),(938,61,31,41,59,35,45),(939,109,64,91,103,83,45),(940,40,40,35,55,40,70),(941,70,70,60,105,60,125),(942,60,78,60,40,51,51),(943,80,120,90,60,70,85),(944,40,65,35,40,35,75),(945,63,95,65,80,72,110),(946,40,65,30,45,35,60),(947,55,115,70,80,70,90),(948,40,40,35,50,100,70),(949,80,70,65,80,120,100),(950,70,100,115,35,55,75),(951,50,62,40,62,40,50),(952,65,108,65,108,65,75),(953,41,50,60,31,58,30),(954,75,50,85,115,100,45),(955,30,35,30,55,30,75),(956,95,60,60,101,60,105),(957,50,45,45,35,64,58),(958,65,55,55,45,82,78),(959,85,75,77,70,105,94),(960,10,55,25,35,25,95),(961,35,100,50,50,70,120),(962,70,103,85,60,85,82),(963,70,45,40,45,40,75),(964,100,70,72,53,62,100),(965,45,70,63,30,45,47),(966,80,119,90,54,67,90),(967,70,95,65,85,65,121),(968,70,85,145,60,55,65),(969,48,35,42,105,60,60),(970,83,55,90,130,81,86),(971,50,61,60,30,55,34),(972,72,101,100,50,97,68),(973,82,115,74,75,64,90),(974,108,68,45,30,40,43),(975,170,113,65,45,55,73),(976,90,102,73,78,65,70),(977,150,100,115,65,65,35),(978,68,50,60,120,95,82),(979,110,115,80,50,90,90),(980,130,75,60,45,100,20),(981,120,90,70,110,70,60),(982,125,100,80,85,75,55),(983,100,135,120,60,85,50),(984,115,131,131,53,53,87),(985,115,65,99,65,115,111),(986,111,127,99,79,99,55),(987,55,55,55,135,135,135),(988,85,135,79,85,105,81),(989,85,81,97,121,85,101),(990,90,112,120,72,70,106),(991,56,80,114,124,60,136),(992,154,140,108,50,68,50),(993,94,80,86,122,80,108),(994,80,70,60,140,110,110),(995,100,134,110,70,84,72),(996,65,75,45,35,45,55),(997,90,95,66,45,65,62),(998,115,145,92,75,86,87),(999,45,30,70,75,70,10),(1000,87,60,95,133,91,84),(1001,85,85,100,95,135,70),(1002,80,120,80,90,65,135),(1003,155,110,125,55,80,45),(1004,55,80,80,135,120,100),(1005,105,139,71,55,101,119),(1006,74,130,90,120,60,116),(1007,100,135,115,85,100,135),(1008,100,85,100,135,115,135),(1009,99,83,91,125,83,109),(1010,90,130,88,70,108,104),(1011,80,80,110,95,80,40),(1012,40,45,45,74,54,50),(1013,71,60,106,121,80,70),(1014,88,128,115,58,86,80),(1015,88,75,66,130,90,106),(1016,88,91,82,70,125,99),(1017,80,120,84,60,96,110),(1018,90,105,130,125,65,85),(1019,106,80,110,120,80,44),(1020,105,115,121,65,93,91),(1021,125,73,91,137,89,75),(1022,90,120,80,68,108,124),(1023,90,72,100,122,108,98),(1024,90,65,85,65,85,60),(1025,88,88,160,88,88,88)

-- returns all records from the table type1
Select * from Pokemons
Select * from BASESTATS
Select * from Type1
Select * from Type2

-- Join the four tables using primary and foreign key
Select p.PokeDexNumber, p.Name, t1.Type1, t2.Type2, bs.HP, bs.Attack, bs.Defense, bs.SpecialAttack, bs.SpecialDefense, bs.Speed
FROM Pokemons p 
Join Type1 t1 ON t1.TypeId = p.TypeId1 
Join Type2 t2 ON t2.TypeId = p.TypeId2
Join BASESTATS bs ON bs.PokeDexNumber = p.PokeDexNumber
ORDER BY p.PokeDexNumber

-- returns only Attack column from table basestats
select bs.Attack from basestats bs

-- returns only unique records from table basestats
select distinct bs.Attack from basestats bs order by bs.attack

-- returns all records from table type1
Select * from type1

-- returns all records from table pokemons
select * from pokemons

-- returns all records from table type2
Select * from type2

-- returns all records from table basestats
Select * from basestats

-- join tables and filters the data where type1 is 'Electric'
Select p.PokeDexNumber,p.Name,t1.type1 from pokemons p join type1 t1 ON t1.typeid = p.TypeId1 
WHERE t1.type1 = 'Electric' order by p.PokeDexNumber;

-- filters the data where type1 is 'Electric and returns type2 adjacent value also'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 = 'Electric'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is 'Electric' and 'Steel'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 = 'Electric'
        AND t2.type2 = 'Flying'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is either 'Electric' or 'Steel'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 = 'Electric'
        OR t2.type2 = 'Steel'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is not 'Electric' 
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    NOT t1.type1 = 'Electric'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is not 'Electric' and type 2 is 'Flying'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    NOT t1.type1 = 'Electric'
        AND t2.type2 = 'Flying'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is not 'Electric' or type 2 is 'Flying'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    NOT t1.type1 = 'Electric'
        OR t2.type2 = 'Flying'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is not 'Electric' and type 2 is 'Electric'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    NOT t1.type1 = 'Electric'
        AND t2.type2 = 'Electric'
ORDER BY p.PokeDexNumber;

-- filters the data where type1 is not 'Electric' or type 2 is 'Electric'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    NOT t1.type1 = 'Electric'
        OR t2.type2 = 'Electric'
ORDER BY p.PokeDexNumber;

-- check whether the names containing any null values
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name IS NULL;

-- names not starts with 'P'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name NOT LIKE 'P%'
ORDER BY p.PokeDexNumber;

-- names starts with 'P'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE 'P%'
ORDER BY p.PokeDexNumber;

-- names ends with 'e'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE '%e'
ORDER BY p.PokeDexNumber;

-- names not ends with 'e'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name NOT LIKE '%e'
ORDER BY p.PokeDexNumber;

-- names containing 'eon'
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE '%eon%'
ORDER BY p.PokeDexNumber;

-- Starts with N and contains two characters between ma and one character after ma
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 LIKE 'N__ma_'
ORDER BY p.PokeDexNumber;

-- Starts with P and ends with o
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE 'P%' AND p.Name LIKE '%o'
ORDER BY p.PokeDexNumber;

-- Starts with P or ends with o
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE 'P%' OR p.Name LIKE '%o'
ORDER BY p.PokeDexNumber;

-- Starts with B and ends with r
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE 'B%r'
ORDER BY p.PokeDexNumber;

-- Starts with C and contains atleast 3 characters 
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE 'C___%'
ORDER BY p.PokeDexNumber;

-- return all pokemons with r in second position
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE '_r%'
ORDER BY p.PokeDexNumber;

-- return all pokemons with type1 as bug
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 LIKE 'Bug'
ORDER BY p.PokeDexNumber;

-- return all pokemons starts with either B,S Or A using rlike which can used as a regex
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name RLIKE '[BSA]'
ORDER BY p.PokeDexNumber;

-- return all pokemons starts with B using rlike which can used as a regex
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name RLIKE '^B'
ORDER BY p.PokeDexNumber;

-- return all pokemons starts with B using rlike which can used as a regex only the first three
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name RLIKE '^B'
ORDER BY p.PokeDexNumber
LIMIT 3;

-- returns names containing 'eon' exclude first three and print next 3
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    p.Name LIKE '%eon%'
ORDER BY p.PokeDexNumber
LIMIT 3 OFFSET 3;

-- returns max, min, count, Avg, sum operations on basestats of the pokemons
Select max(bs.HP) as Max_HP, min(bs.attack) as Min_attack, count(bs.Defense) as defenseCount, 
avg(bs.SpecialAttack) as averageSpecialAttack, sum(bs.SpecialDefense) as sumSpecialDefense from pokemons p
join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber

-- using the function dense_rank(), rank the highest hp to the lowest
select p.PokeDexNumber, p.name,bs.HP, dense_rank() over(order by bs.HP desc) as MaxHP from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber

-- using the function dense_rank(), rank the highest hp to the lowest and find the third highest HP and its pokemon name
select p.PokeDexNumber, p.name,bs.HP, dense_rank() over(order by bs.HP desc) as MaxHP from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber limit 1  offset 2;

-- using the function dense_rank(), rank the highest attack to the lowest
select p.PokeDexNumber, p.name,bs.attack, dense_rank() over(order by bs.attack desc) as MaxAttack from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber

-- using the function dense_rank(), rank the highest attack to the lowest and find the third highest attack and its pokemon name
select p.PokeDexNumber, p.name,bs.attack, dense_rank() over(order by bs.attack desc) as MaxAttack from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber limit 1  offset 2;

-- using the function dense_rank(), rank the highest defense to the lowest
select p.PokeDexNumber, p.name,bs.defense, dense_rank() over(order by bs.defense desc) as MaxDefense from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber

-- using the function dense_rank(), rank the highest defense to the lowest and find the third highest defense and its pokemon name
select p.PokeDexNumber, p.name,bs.defense, dense_rank() over(order by bs.defense desc) as MaxDefense from pokemons p 
Join basestats bs ON bs.PokeDexNumber = p.PokeDexNumber limit 1  offset 2;

-- using Exists operator used to check existense of the record
SELECT 
    p.PokeDexNumber, p.name
FROM
    pokemons p
WHERE
    EXISTS( SELECT 
            bs.PokeDexNumber
        FROM
            basestats bs
        WHERE
            bs.PokeDexNumber = p.PokeDexNumber);

-- using Exists operator used to check existense of the record
SELECT 
    p.PokeDexNumber, p.name
FROM
    pokemons p
WHERE
    EXISTS( SELECT 
            bs.PokeDexNumber
        FROM
            basestats bs
        WHERE
            bs.PokeDexNumber = p.PokeDexNumber
                AND bs.hp = '100');

-- using IN operator selects all pokemons coming under bug, electric and flying type
SELECT 
    p.PokeDexNumber, p.Name, t1.type1
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
WHERE
    t1.type1 IN ('Bug' , 'Electric', 'Flying')
ORDER BY p.PokeDexNumber;

-- using IN operator selects all pokemons coming under bug, electric and flying type of type 1 and dragon, steel of type 2
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 IN ('Electric' , 'Flying', 'Bug')
        AND t2.type2 IN ('Dragon' , 'Steel')
ORDER BY p.PokeDexNumber;

-- using NOT IN operator selects all pokemons except the pokemons coming under bug, electric and flying type
SELECT 
    p.PokeDexNumber, p.Name, t1.type1
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
WHERE
    t1.type1 NOT IN ('Bug' , 'Electric', 'Flying')
ORDER BY p.PokeDexNumber;

-- using IN operator selects all pokemons except the pokemons coming under bug, electric and flying type of type 1 and dragon, steel of type 2
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 NOT IN ('Electric' , 'Flying', 'Bug')
        AND t2.type2 NOT IN ('Dragon' , 'Steel')
ORDER BY p.PokeDexNumber;

-- using IN operator selects all pokemons except the pokemons coming under eithe bug, electric and flying type of type 1 or dragon, steel of type 2
SELECT 
    p.PokeDexNumber, p.Name, t1.type1, t2.type2
FROM
    pokemons p
        JOIN
    type1 t1 ON t1.typeid = p.TypeId1
        JOIN
    type2 t2 ON t2.typeid = p.TypeId2
WHERE
    t1.type1 IN ('Electric' , 'Flying', 'Bug')
        OR t2.type2 IN ('Dragon' , 'Steel')
ORDER BY p.PokeDexNumber;

-- count how many pokemons in type1 based on their types
Select t1.type1, count(p.Name) as type1Pokemoncount
from pokemons p JOIN type1 t1 ON t1.typeid = p.TypeId1 
group by t1.type1

-- count how many pokemons in type2 based on their types
Select t2.type2, count(p.Name) as type2Pokemoncount from pokemons p JOIN type2 t2 ON t2.typeid = p.TypeId2 
group by t2.type2

-- count how many pokemons in type1 based on their types and rank them according to the highest count using row_Number() (same as dense_rank())
Select t1.type1, count(p.Name) as type1Pokemoncount , row_Number() Over(Order by count(p.Name) desc) as Type1Rank  
from pokemons p JOIN type1 t1 ON t1.typeid = p.TypeId1 group by t1.type1

-- count how many pokemons in type2 based on their types and rank them according to the highest count using row_Number() (same as dense_rank())
Select t2.type2, count(p.Name) as type2Pokemoncount , row_Number() Over(Order by count(p.Name) desc) as Type2Rank  
from pokemons p JOIN type2 t2 ON t2.typeid = p.TypeId2 group by t2.type2

-- filter pokemons by type1 and return the types which contains pokemon count is greater than 100 using having clause
Select t1.type1, count(p.Name) as type1Pokemoncount 
from pokemons p JOIN type1 t1 ON t1.typeid = p.TypeId1 group by t1.type1 having type1Pokemoncount > 100

-- filter pokemons by type2 and return the types which contains pokemon count is greater than 50 using having clause
Select t2.type2, count(p.Name) as type2Pokemoncount 
from pokemons p JOIN type2 t2 ON t2.typeid = p.TypeId2 group by t2.type2 having type2Pokemoncount > 50 Order By type2Pokemoncount desc

Select count(p.Name) as type1Pokemoncount from pokemons p WHERE p.TypeId1 = ANY(
select t1.typeid from type1 t1 where t1.type1 = 'Bug'
)

-- select * INTO pokemonDataBackup from pokemons


-- Using SQL Case provide conditions based on the pokemons by their types
select t1.type1, count(p.Name) as type1Pokemoncount ,
CASE
WHEN count(p.Name) < 100 THEN 'the pokemon count is less than 100 in that type'
WHEN count(p.Name) >= 100 THEN 'the pokemon count is greater than or equal to 100 in that type'
ELSE 'The pokemon count is below 0'
END AS pokemoncounttext
from pokemons p join type1 t1 on t1.typeid = p.TypeId1
group BY t1.type1

CREATE PROCEDURE selectAllPokemons()
BEGIN SELECT * FROM pokemons 
END;

-- Arithmetic operators
select bs.HP + bs.Attack as sum from basestats bs;

select bs.defense - bs.SpecialAttack as difference from basestats bs;

select bs.SpecialDefense * bs.Speed as product from basestats bs;

select bs.SpecialDefense / bs.Speed as Divide from basestats bs;

select bs.SpecialDefense % bs.Speed as Modulo from basestats bs;

-- Comparison Operators
Select p.PokeDexNumber, p.name,bs.HP from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.HP = 200

Select p.PokeDexNumber, p.name,bs.HP from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.HP > 200

Select p.PokeDexNumber, p.name,bs.HP from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.HP < 100

Select p.PokeDexNumber, p.name,bs.Attack from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.Attack >= 100

Select p.PokeDexNumber, p.name,bs.Attack from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.Attack <= 100

Select p.PokeDexNumber, p.name,bs.Attack from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.Attack <> 100

-- Logical SOME operator
Select p.PokeDexNumber, p.name,bs.HP from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber where bs.HP > SOME(
SELECT bs.HP from basestats bs WHERE bs.HP >= 200
)

-- Creating Index
CREATE Index idx_pokedata ON Pokemons(PokeDexNumber, name)

-- Creating Unique Index
CREATE Unique Index idx_types ON type1(Type1)

-- Creating, Droping, updating and reading Views
CREATE VIEW Bug_pokemons AS Select p.PokeDexNumber, p.Name, t1.type1 from pokemons p 
JOIN type1 t1 ON t1.typeid = p.TypeId1
WHERE type1 = 'Bug'

select * from Bug_pokemons

DROP View Bug_pokemons

CREATE OR Replace View Bug_pokemons AS
Select p.PokeDexNumber, p.Name, t1.type1,t2.type2 from pokemons p 
JOIN type1 t1 ON t1.typeid = p.TypeId1 
JOIN type2 t2 ON t2.typeid = p.TypeId2 
WHERE type1 = 'Bug' AND type2 = 'NULL'

-- Mysql Functions
Select p.Name, ASCII(p.Name) as NumCodeOfFirstCharacter from pokemons p 

Select p.Name, CHAR_LENGTH(p.Name) as LengthOfTheString from pokemons p

Select p.Name, CHARACTER_LENGTH(p.Name) as LengthOfTheString from pokemons p

Select p.Name, CONCAT(bs.HP,",",bs.attack,",",bs.defense,",",bs.SpecialAttack,",",bs.SpecialDefense,",",bs.Speed) as BaseStatsConcat 
from pokemons p join basestats bs on bs.PokeDexNumber = p.PokeDexNumber 
